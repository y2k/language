===| 1 |===========================
"main.clj:1:1"
===| 2 |===========================
const p__6 = (10 - 20);
(1 - p__6)
===| 3 |===========================
(1 - 2 - 3 - 4)
===| 4 |===========================
{ ..."person", ["city"]: "NY" }
===| 5 |===========================
const p__6 = alert("person");
{ ...p__6, ["city"]: "NY" }
===| 6 |===========================
crypto.subtle
===| 7 |===========================
"r".join()
===| 8 |===========================
3 === "https://g.com/a"(1)
===| 9 |===========================
const p__6 = (2 * 3 * 4);
(1 * p__6)
===| 10 |===========================
const p__6 = (17 / 3);
(5 / p__6)
===| 11 |===========================
(1 % 2)
===| 12 |===========================
export const foo = (1 + 2);
===| 13 |===========================
(1 + 2)
===| 14 |===========================
(3 <= 1)
(4 >= 2)
===| 15 |===========================
const p__6 = {["__y2k_type"]: "quote", ["value"]: "a"};
alert(p__6)
===| 16 |===========================
alert("a\"b")
===| 17 |===========================
alert("foo\"bar")
===| 18 |===========================
const p__6 = {["__y2k_type"]: "quote", ["value"]: "a"};
alert(p__6)
===| 19 |===========================
const p__6 = [1, 2, 3];
alert(...p__6)
===| 20 |===========================
alert(1)
alert(3)
===| 21 |===========================
alert(1)
alert(3)
;;
alert(2)
===| 22 |===========================
alert(globalThis)
===| 23 |===========================
const p__6 = (1 && 2 && 3);
("a" && p__6 && "c" && "d")
===| 24 |===========================
const p__6 = alert(1);
const p__7 = alert(2);
const p__8 = alert(3);
(p__6 && p__7 && p__8)
===| 25 |===========================
(1 && 2 && 3)
===| 26 |===========================
(1 && 2)
===| 27 |===========================
(1)
===| 28 |===========================
Array.of(1)
===| 29 |===========================
("" + 2)
===| 30 |===========================
const p__6 = [1, 2];
const p__7 = [3, 4];
[...p__6, ...p__7]
===| 31 |===========================
let p__7;
const p__6 = 1 === 2;
if (p__6) {
p__7 = 3;
} else {
let p__9;
const p__8 = 4 === 5;
if (p__8) {
p__9 = 6;
} else {
p__9 = 0;
}
p__7 = p__9;
}
p__7
===| 32 |===========================
let p__7;
const p__6 = 1 === 2;
if (p__6) {
p__7 = 3;
} else {
let p__9;
const p__8 = 4 === 5;
if (p__8) {
p__9 = 6;
} else {
let p__11;
const p__10 = 7 === 8;
if (p__10) {
p__11 = 9;
} else {
p__11 = 0;
}
p__9 = p__11;
}
p__7 = p__9;
}
p__7
===| 33 |===========================
let p__7;
const p__6 = ("" + "c");
if (p__6) {
p__7 = ("" + "a");
} else {
p__7 = ("" + "b");
}
p__7
===| 34 |===========================
let p__7;
if (1) {
p__7 = 2;
} else {
let p__9;
if (3) {
p__9 = 4;
} else {
p__9 = 5;
}
p__7 = p__9;
}
p__7
===| 35 |===========================
const p__6 = [1, 2];
[...p__6, 3]
===| 36 |===========================
const LI_SP = 600;
===| 37 |===========================
export const foo = (1 + 2);
===| 38 |===========================
export const LI_SP = 600;
===| 39 |===========================
const a = "";
const p__6 = typeof a;
p__6 === "String"
===| 40 |===========================
const a = [];
a[7]
===| 41 |===========================
const a = {};
{ ...a, ["city"]: "NY" }
===| 42 |===========================
const a = {};
{ ...a, ["user_id"]: "data.now" }
===| 43 |===========================
const a = {};
a.db[7]=a.now
===| 44 |===========================
const a = {};
(a.bar = 1);
===| 45 |===========================
const a = {};
const p__7 = (((x) => { return x }))(a[0]);
const p__6 = a.splice(0, 1, p__7);
p__6[0]
===| 46 |===========================
const a = 1;
console.info("hello", a, 123)
===| 47 |===========================
const c = {};
c["a"]
===| 48 |===========================
const LI_SP = 600;
===| 49 |===========================
const r = {};
r.play
===| 50 |===========================
const r = {};
r.play
===| 51 |===========================
const x = 1;
x[0]
===| 52 |===========================
const x = 1;
x.fill(2)
2
===| 53 |===========================
alert(1)
===| 54 |===========================
export const a = ((b, c, ...d) => { return console.info(b, c, d) });
===| 55 |===========================
export const b = ((x) => { return x });
export const fetch = ((r, e, c) => { return b(0) });
===| 56 |===========================
export const bar = ((y) => { return y.b });
===| 57 |===========================
export const f = ((fx) => { return fx(2) });
===| 58 |===========================
export const f = ((x, y) => { return y });
f(1, 2)
===| 59 |===========================
export const f = ((x) => { return x });
f(1)
===| 60 |===========================
export const foo = ((a, b) => { return a });
===| 61 |===========================
export const foo = ((a, b) => { return a });
===| 62 |===========================
export const foo = ((bar, then) => { bar(1);
const p__6 = bar(2);;
return then(p__6) });
===| 63 |===========================
export const foo = ((x) => { return foo(x) });
===| 64 |===========================
export const foo = ((x) => { return x });
export const bar = ((y) => { return foo(y) });
===| 65 |===========================
export const x = (() => { return console.info() });
===| 66 |===========================
const foo = ((r, e, w) => { return 0 });
const p__6 = {["fetch"]: foo};
export default p__6
===| 67 |===========================
const foo = ((x) => { return x });
===| 68 |===========================
const foo = ((x) => { return x });
const p__6 = {["fetch"]: foo};
export default p__6
===| 69 |===========================
const p__6 = {["fetch"]: "fetch_handler"};
export default p__6
===| 70 |===========================
const p__7 = ((a) => { return a });
const p__6 = {["fetch"]: p__7};
export default p__6
===| 71 |===========================
let p__8;
const p__7 = alert(1);
if (p__7) {
const p__9 = alert(22);
p__8 = alert(21, p__9);
} else {
p__8 = alert(3);
}
const p__6 = p__8;
fetch(p__6)
===| 72 |===========================
const p__6 = [1, 2, 3];
const p__7 = alert(p__6);
fetch(...p__7)
===| 73 |===========================
const p__6 = [1, 2, 3];
fetch(...p__6)
===| 74 |===========================
const p__6 = [1, 2, 3];
fetch(p__6)
===| 75 |===========================
let p__9;
if (1) {
p__9 = 2;
} else {
p__9 = 3;
}
const p__7 = p__9;
const p__6 = {["a"]: p__7};
fetch(p__6)
===| 76 |===========================
const p__7 = ("" + "FIXME main.clj:1:1 - ");
const p__6 = new Error(p__7);
(function(){throw p__6})()
===| 77 |===========================
((p__6) => { const p__7 = p__6[0];;
const a = p__7["b"];;
const c = p__7["d"];;
const e = p__6[1];;
return (a + c + e) })
===| 78 |===========================
((p__6, e) => { const a = p__6["b"];;
const c = p__6["d"];;
return (a + c + e) })
===| 79 |===========================
((p__6) => { const a = p__6["url"];;
const b = p__6["props"];;
return [a, b] })
===| 80 |===========================
((a, p__6, d) => { const b = p__6[0];;
const c = p__6[1];;
return a(b, c, d) })
===| 81 |===========================
((a, p__6, c) => { const b = p__6["b"];;
return a(b, c) })
===| 82 |===========================
((a, e) => { return (a + e) })
===| 83 |===========================
const p__7 = oof();
const p__6 = bar(p__7);
foo(p__6)
===| 84 |===========================
const p__6 = bar();
foo(p__6)
===| 85 |===========================
new Foo("a", 1)
===| 86 |===========================
new Foo()
===| 87 |===========================
let p__7;
if (1) {
p__7 = 2;
} else {
p__7 = 3;
}
p__7
===| 88 |===========================
export const a = 1;
export const b = 2;
===| 89 |===========================

===| 90 |===========================
("" + 2)
===| 91 |===========================
const p__6 = "c";
const a = p__6[0];
const b = p__6[1];
a
===| 92 |===========================
(() => { let p__7;;
if (false) {
p__7 = 1;
} else {
p__7 = 2;
};
return p__7 })
===| 93 |===========================
const p__6 = alert(1);
const a = fetch(p__6);
a
===| 94 |===========================
const a = fetch(1);
a
===| 95 |===========================
const b = "c";
{[b]: 2}
===| 96 |===========================
const c = 1;
const b = c;
const a = b;
a
===| 97 |===========================
const fx = 1;
fx(2)
===| 98 |===========================
const r = 0;
r.json()
===| 99 |===========================
const p__6 = (1 + 2);
!(p__6)
===| 100 |===========================
!(1)
===| 101 |===========================
const p__6 = 1 === 2;
!(p__6)
===| 102 |===========================

===| 103 |===========================
import * as app from './main.shared.js';
===| 104 |===========================
(1)
===| 105 |===========================
console.info("hello world")
===| 106 |===========================
console.info(1, 2, 3)
===| 107 |===========================
console.info()
===| 108 |===========================
new Response("hello_world", 1, false)
===| 109 |===========================
const p__7 = alert(2);
const p__6 = p__7.bar;
(p__6 = 1);
===| 110 |===========================
const p__6 = new Error("foo");
(function(){throw p__6})()
===| 111 |===========================
typeof 1
===| 112 |===========================
const p__6 = "r".join();
[p__6]
===| 113 |===========================
let p__8;
if (1) {
p__8 = 2;
} else {
p__8 = 3;
}
const p__6 = p__8;
[p__6]
===| 114 |===========================
const p__6 = ("" + "a");
[p__6]
===| 115 |===========================
[]
===| 116 |===========================
let p__8;
if (4) {
p__8 = 5;
} else {
p__8 = 6;
}
const p__6 = p__8;
{["a"]: p__6}
===| 117 |===========================
{["a"]: 1}
===| 118 |===========================
const p__6 = "r".join();
{["b"]: p__6}
===| 119 |===========================
const p__7 = (() => { return "TG_SECRET_TOKEN" });
const p__6 = {["get"]: p__7};
{["headers"]: p__6}
===| 120 |===========================
const p__7 = [10, 20, 30];
const p__6 = [1, p__7, 3];
{["content-type"]: "application/json", ["a"]: p__6}
===| 121 |===========================
let p__8;
if (1) {
p__8 = 2;
} else {
p__8 = 3;
}
const p__6 = p__8;
let p__11;
if (4) {
p__11 = 5;
} else {
p__11 = 6;
}
const p__9 = p__11;
{[p__6]: p__9}
===| 122 |===========================
{}
